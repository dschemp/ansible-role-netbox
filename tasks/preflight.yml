---
- name: "Retrieve latest Netbox version."
  when: "netbox_version == 'latest'"
  block:
    - name: "Get latest release info from GitHub."
      ansible.builtin.uri:
        url: https://api.github.com/repos/netbox-community/netbox/releases/latest
      register: "__netbox_latest_release"

    - name: "Set application version."
      ansible.builtin.set_fact:
        netbox_version: "{{ __netbox_latest_release.json.tag_name | replace('v', '') }}"

    - name: "Debug latest Netbox version."
      ansible.builtin.debug:
        var: "netbox_version"

- name: "Require Python 3.8+ (Netbox 3.2+)."
  when:
    - "netbox_version is version('3.2', '>=')"
    - "netbox_version is version('4.0', '<')"
  ansible.builtin.command:
    cmd: "{{ netbox_python_path }} --version"
  register: "__netbox_python_version"
  changed_when: false
  failed_when: >
    __netbox_python_version.rc != 0 or
    __netbox_python_version.stdout | replace('Python ', '') is version('3.8', '<')

- name: "Require Python 3.10+ (Netbox 4.0+)."
  when: "netbox_version is version('4.0', '>=')"
  ansible.builtin.command:
    cmd: "{{ netbox_python_path }} --version"
  register: "__netbox_python_version"
  changed_when: false
  failed_when: >
    __netbox_python_version.rc != 0 or
    __netbox_python_version.stdout | replace('Python ', '') is version('3.10', '<')

- name: "Check if Netbox is already installed."
  become: true
  ansible.builtin.stat:
    path: "{{ netbox_path }}/netbox/netbox/settings.py"
  register: "netbox_settings_py_stat"

- name: "Get currently installed version."
  when: "netbox_settings_py_stat.stat.exists"
  block:
    - name: "Get currently installed Netbox version."
      become: true
      ansible.builtin.command:
        cmd: "grep '^VERSION' {{ netbox_path }}/netbox/netbox/settings.py"
      changed_when: false
      register: "netbox_version_command"

    - name: "Set installed Netbox version variable."
      ansible.builtin.set_fact:
        netbox_installed_version: "{{ netbox_version_command.stdout | regex_search('\\d+\\.\\d+\\.\\d+') | trim }}"

    - name: "Debug currently installed Netbox version."
      ansible.builtin.debug:
        var: "netbox_installed_version"
        verbosity: 1

# In case there is Netbox is not installed we just use the target version for comparison.
- name: "Check if an upgrade is necessary."
  ansible.builtin.set_fact:
    netbox_upgrade_needed: "{{ netbox_installed_version | default(netbox_version) is version(netbox_version, '<') }}"

- name: "Debug upgrade needed."
  ansible.builtin.debug:
    var: "netbox_upgrade_needed"
    verbosity: 1

- name: "Set archive url."
  ansible.builtin.set_fact:
    netbox_url: "https://github.com/netbox-community/netbox/archive/refs/tags/v{{ netbox_version }}.tar.gz"

- name: "Create system group."
  become: true
  ansible.builtin.group:
    name: "{{ netbox_group }}"
    system: true
    state: "present"

- name: "Create system user."
  become: true
  ansible.builtin.user:
    name: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
    system: true
    home: "{{ netbox_path }}"
    shell: "{{ netbox_user_shell }}"
    state: "present"
