---
- name: "Generate a secret key if not provided by user."
  when: "netbox_secret_key is undefined"
  become: true
  become_user: "{{ netbox_user }}"
  block:
    - name: "Check if keyfile exists."
      ansible.builtin.stat:
        path: "{{ netbox_secret_key_path }}"
      register: "__netbox_secret_key_stat"

    - name: "Generate secret key."
      when: "not __netbox_secret_key_stat.stat.exists"
      ansible.builtin.command:
        cmd: "{{ netbox_python_path }} {{ netbox_path }}/netbox/generate_secret_key.py"
      changed_when: false
      register: "__netbox_secret_key_generated"

    - name: "Store secret key in keyfile."
      when: "not __netbox_secret_key_stat.stat.exists"
      ansible.builtin.copy:
        content: |
          {{ __netbox_secret_key_generated.stdout }}
        dest: "{{ netbox_secret_key_path }}"
        mode: "0400"

    - name: "Read secret key."
      ansible.builtin.slurp:
        path: "{{ netbox_secret_key_path }}"
      register: "__netbox_secret_key_slurp"

    - name: "Set secret key fact."
      ansible.builtin.set_fact:
        netbox_secret_key: "{{ __netbox_secret_key_slurp.content | b64decode | trim }}"

- name: "Copy configuration."
  become: true
  ansible.builtin.template:
    src: "configuration.py.j2"
    dest: "{{ netbox_path }}/netbox/netbox/configuration.py"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
    mode: "0440"
  register: "__netbox_copy_configuration"

- name: "Copy gunicorn configuration."
  become: true
  ansible.builtin.template:
    src: "gunicorn.py.j2"
    dest: "{{ netbox_path }}/gunicorn.py"
    owner: "{{ netbox_user }}"
    group: "{{ netbox_group }}"
    mode: "0440"
  register: "__netbox_copy_gunicorn_configuration"

- name: "Run upgrade script."
  become: true
  become_user: "{{ netbox_user }}"
  when: >
    __netbox_install_application.changed or
    __netbox_copy_configuration.changed or
    __netbox_copy_gunicorn_configuration.changed or
    netbox_force_upgrade_script
  environment:
    PYTHON: "{{ netbox_python_path }}"
  ansible.builtin.command:
    cmd: "{{ netbox_path }}/upgrade.sh"
  register: "__netbox_upgrade_script"
  # TODO: changed_when.
  # How do we detect a run, where something has changed besides DB migrations.
  changed_when: "'No migrations to apply.' not in __netbox_upgrade_script.stdout"
